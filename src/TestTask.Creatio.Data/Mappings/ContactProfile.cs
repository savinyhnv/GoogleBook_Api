using EdenLab.Core.Entities.Mapping;
using TestTask.Creatio.Data.Entities;

namespace TestTask.Creatio.Data.Mappings
{
    public class ContactProfile : EntityProfile
    {
        public ContactProfile()
        {
            CreateMap<Contact>()
                .ForProp("Id", x => x.Id)
                .ForProp("Name", x => x.Name)
                .ForProp("OwnerId", x => x.OwnerId)
                .ForProp("Owner", x => x.Owner)
                .ForProp("CreatedOn", x => x.CreatedOn)
                .ForProp("CreatedById", x => x.CreatedById)
                .ForProp("CreatedBy", x => x.CreatedBy)
                .ForProp("ModifiedOn", x => x.ModifiedOn)
                .ForProp("ModifiedById", x => x.ModifiedById)
                .ForProp("ModifiedBy", x => x.ModifiedBy)
                .ForProp("ProcessListeners", x => x.ProcessListeners)
                .ForProp("Dear", x => x.Dear)
                .ForProp("SalutationTypeId", x => x.SalutationTypeId)
                .ForProp("SalutationType", x => x.SalutationType)
                .ForProp("GenderId", x => x.GenderId)
                .ForProp("Gender", x => x.Gender)
                .ForProp("AccountId", x => x.AccountId)
                .ForProp("Account", x => x.Account)
                .ForProp("DecisionRoleId", x => x.DecisionRoleId)
                .ForProp("DecisionRole", x => x.DecisionRole)
                .ForProp("TypeId", x => x.TypeId)
                .ForProp("Type", x => x.Type)
                .ForProp("JobId", x => x.JobId)
                .ForProp("Job", x => x.Job)
                .ForProp("JobTitle", x => x.JobTitle)
                .ForProp("DepartmentId", x => x.DepartmentId)
                .ForProp("Department", x => x.Department)
                .ForProp("BirthDate", x => x.BirthDate)
                .ForProp("Phone", x => x.Phone)
                .ForProp("MobilePhone", x => x.MobilePhone)
                .ForProp("HomePhone", x => x.HomePhone)
                .ForProp("Skype", x => x.Skype)
                .ForProp("Email", x => x.Email)
                .ForProp("AddressTypeId", x => x.AddressTypeId)
                .ForProp("AddressType", x => x.AddressType)
                .ForProp("Address", x => x.Address)
                .ForProp("CityId", x => x.CityId)
                .ForProp("City", x => x.City)
                .ForProp("RegionId", x => x.RegionId)
                .ForProp("Region", x => x.Region)
                .ForProp("Zip", x => x.Zip)
                .ForProp("CountryId", x => x.CountryId)
                .ForProp("Country", x => x.Country)
                .ForProp("DoNotUseEmail", x => x.DoNotUseEmail)
                .ForProp("DoNotUseCall", x => x.DoNotUseCall)
                .ForProp("DoNotUseFax", x => x.DoNotUseFax)
                .ForProp("DoNotUseSms", x => x.DoNotUseSms)
                .ForProp("DoNotUseMail", x => x.DoNotUseMail)
                .ForProp("Notes", x => x.Notes)
                .ForProp("Facebook", x => x.Facebook)
                .ForProp("LinkedIn", x => x.LinkedIn)
                .ForProp("Twitter", x => x.Twitter)
                .ForProp("FacebookId", x => x.FacebookId)
                .ForProp("LinkedInId", x => x.LinkedInId)
                .ForProp("TwitterId", x => x.TwitterId)
                .ForProp("ContactPhoto", x => x.ContactPhoto)
                .ForProp("TwitterAFDAId", x => x.TwitterAFDAId)
                .ForProp("TwitterAFDA", x => x.TwitterAFDA)
                .ForProp("FacebookAFDAId", x => x.FacebookAFDAId)
                .ForProp("FacebookAFDA", x => x.FacebookAFDA)
                .ForProp("LinkedInAFDAId", x => x.LinkedInAFDAId)
                .ForProp("LinkedInAFDA", x => x.LinkedInAFDA)
                .ForProp("PhotoId", x => x.PhotoId)
                .ForProp("Photo", x => x.Photo)
                .ForProp("GPSN", x => x.GPSN)
                .ForProp("GPSE", x => x.GPSE)
                .ForProp("Surname", x => x.Surname)
                .ForProp("GivenName", x => x.GivenName)
                .ForProp("MiddleName", x => x.MiddleName)
                .ForProp("Confirmed", x => x.Confirmed)
                .ForProp("LanguageId", x => x.LanguageId)
                .ForProp("Language", x => x.Language)
                .ForProp("Age", x => x.Age)
                .ForProp("IsEmailConfirmed", x => x.IsEmailConfirmed);
        }
    }
}
